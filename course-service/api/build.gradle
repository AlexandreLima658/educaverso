plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'kotlin-conventions'

    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlinVersion"
    id "io.ktor.plugin" version "$ktorVersion"

    id 'jacoco-report-aggregation'
}

group 'app.educaverso.course.service.api'

dependencies {

    // Project
    implementation project(":commons")
    implementation project(":course-service:core")
    implementation project(":course-service:application")
    implementation project(":course-service:infrastructure:mongodb-repository")

    // Ktor
    implementation("io.ktor:ktor-server-core:$ktorVersion")
    implementation("io.ktor:ktor-server-netty:$ktorVersion")
    implementation("io.ktor:ktor-server-compression:$ktorVersion")
    implementation("io.ktor:ktor-server-content-negotiation:$ktorVersion")
    implementation("io.ktor:ktor-server-status-pages:$ktorVersion")

    implementation("io.ktor:ktor-serialization-gson:$ktorVersion")
    implementation 'io.ktor:ktor-server-core-jvm:2.3.5'
    implementation 'io.ktor:ktor-server-host-common-jvm:2.3.5'
    implementation 'io.ktor:ktor-server-status-pages-jvm:2.3.5'
    testImplementation("io.ktor:ktor-server-tests:$ktorVersion")

    // Koin
    implementation("io.insert-koin:koin-ktor:$koinVersion")
}

application {
    mainClass.set("app.educaverso.course.service.api.MainKt")
}

ktor {
    fatJar {
        archiveFileName.set("$rootDir/build/libs/${project.name}-fat.jar")
    }
}

testCodeCoverageReport {
    reports {

        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/html")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}